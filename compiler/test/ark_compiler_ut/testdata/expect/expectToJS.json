{
  "expect_index_ets_to_js": "\"/**\\n * Copyright (c)'@ohos:app.ability.UIAbility'\\n * Licensed under t'@ohos:hilog'ense, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n@Entry\\n@Component\\nstruct Index {\\n  @State message: string = 'Hello World'\\n\\n  build() {\\n    Row() {\\n      Column() {\\n        Text(this.message)\\n          .fontSize(50)\\n          .fontWeight(FontWeight.Bold)\\n      }\\n      .width('100%')\\n    }\\n    .height('100%')\\n  }\\n}\"",
  "expect_entryability_ts_to_js": "\"/**\\r\\n * Copyright ('@ohos:app.ability.UIAbility'd.\\r\\n * Licensed und'@ohos:hilog' License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *     http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nimport UIAbility from '@ohos.app.ability.UIAbility';\\r\\nimport hilog from '@ohos.hilog';\\r\\nimport window from '@ohos.window';\\r\\n\\r\\nexport default class EntryAbility extends UIAbility {\\r\\n  onCreate(want, launchParam) {\\r\\n    hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onCreate');\\r\\n  }\\r\\n\\r\\n  onDestroy() {\\r\\n    hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onDestroy');\\r\\n  }\\r\\n\\r\\n  onWindowStageCreate(windowStage: window.WindowStage) {\\r\\n    // Main window is created, set main page for this ability\\r\\n    hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onWindowStageCreate');\\r\\n\\r\\n    windowStage.loadContent('pages/Index', (err, data) => {\\r\\n      if (err.code) {\\r\\n        hilog.error(0x0000, 'testTag', 'Failed to load the content. Cause: %{public}s', JSON.stringify(err) ?? '');\\r\\n        return;\\r\\n      }\\r\\n      hilog.info(0x0000, 'testTag', 'Succeeded in loading the content. Data: %{public}s', JSON.stringify(data) ?? '');\\r\\n    });\\r\\n  }\\r\\n\\r\\n  onWindowStageDestroy() {\\r\\n    // Main window is destroyed, release UI related resources\\r\\n    hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onWindowStageDestroy');\\r\\n  }\\r\\n\\r\\n  onForeground() {\\r\\n    // Ability has brought to foreground\\r\\n    hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onForeground');\\r\\n  }\\r\\n\\r\\n  onBackground() {\\r\\n    // Ability has back to background\\r\\n    hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onBackground');\\r\\n  }\\r\\n}\\r\\n\""
}