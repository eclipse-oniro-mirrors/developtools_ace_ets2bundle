/*
 * Copyright (C) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { ComponentV2, DragEvent, Button, Column, Text, ForEach, Divider } from "@ohos.arkui.component"
import { Provider, Consumer, Local, ObservedV2, Trace } from "@ohos.arkui.stateManagement"

@ObservedV2
class User {
  @Trace name: string;
  @Trace age: number;

  constructor(name: string, age: number) {
    this.name = name;
    this.age = age;
  }
}

const data: User[] = [new User('Json', 10), new User('Eric', 15)];

@ComponentV2
struct Parent {
  @Provider('data') users: User[] = data;


  build() {
    Column() {
      Child()
      Button('add new user')
        .onClick((e) => {
          this.users.push(new User('Molly', 18));
        })
      Button('age++')
        .onClick((e) => {
          this.users[0].age++;
        })
      Button('change name')
        .onClick((e) => {
          this.users[0].name = 'Shelly';
        })
    }
  }
}


@ComponentV2
struct Child {
  @Consumer('data') users: User[] = [];

  build() {
    Column() {
      ForEach<User>(this.users, (item: User) => {
        Column() {
          Text(`name: ${item.name}`).fontSize(30)
          Text(`age: ${item.age}`).fontSize(30)
          Divider()
        }
      })
    }
  }
}